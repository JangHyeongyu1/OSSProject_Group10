#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h> //getch 아무키입력을 위한 헤더파일 (수정예정)
#include <windows.h>

#define WIDTH 60      //콘솔창의 가로길이
#define HEIGHT 40      //콘솔창의 세로길이

void Clear(void); //화면을 지워주고 커서의 위치를 0,0 으로 이동시키는 함수
void gotoxy(int _x, int _y); // 커서의 위치를 변경하는 함수
void SetCursor(BOOL _bShow); // cursor를 보이게, 안보이게 하는 함수
void SetConsoleSize(int _col, int _lines); // console 창의 크기를 정하는 함수


void Clear(void) {
    system("cls");
}

void gotoxy(int _x, int _y) {
    COORD pos = { _x, _y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}


void SetCursor(BOOL _bShow) {
    CONSOLE_CURSOR_INFO curInfo;
    GetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &curInfo);
    curInfo.bVisible = _bShow;
    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &curInfo);
}

void SetConsoleSize(int _col, int _lines) {
    char setText[100];
    sprintf_s(setText, "mode con cols=%d lines=%d", _col, _lines);
    system(setText);
}

int SCORE = 0;

struct OBJECT { //구조체 생성
    int x = 0;
    int y = 0;
    bool bActive = 0;
};

OBJECT realPlayer;

void MapSize() {
    SetConsoleSize(WIDTH, HEIGHT);   //콘솔창 사이즈 조절
    realPlayer.x = WIDTH / 2, realPlayer.y = HEIGTH - 2;   //처음 비행기좌표 가로의 중앙, 세로의 아래에서 두번째 칸 지정
    realPlayer.bActive = 1;   //목숨 on
}



void InputProcess() {
    if (GetAsyncKeyState(VK_LEFT) & 0x8000) {   //왼쪽방향키
        player.x--;
        if (player.x < 1) player.x = 1;
    }

    if (GetAsyncKeyState(VK_RIGHT) & 0x8000) {   //오른쪽방향키
        player.x++;
        if (player.x > WIDTH-2 ) player.x = WIDTH-2 ;
    }

    if (GetAsyncKeyState(VK_UP) & 0x8000) {   //위쪽방향키
        player.y--;
        if (player.y < 1) player.y = 1;
    }

    if (GetAsyncKeyState(VK_DOWN) & 0x8000) {   //아래쪽방향키
        player.y++;
        if (player.y > HEIGHT-1 ) player.y = HEIGHT-1 ;
    }
}


void PrintPlayer() {
        gotoxy(player.x, player.y);   //커서이동
        printf("♀");
}


void StartMenu() {
    //while (_kbhit()) _getch(); 아무키나 입력받기 위해 쓰인 것으로 난이도 변경시 수정 될 부분

    while (1) {
        system("cls");
        gotoxy(2, HEIGHT / 6);
        printf("GAME START");
        gotoxy(2, HEIGHT / 5);
        printf("***F학점 피하기 게임***");
        gotoxy(2, HEIGHT / 4);
        printf("***조작 : 키보드 상하좌우 키***");
        gotoxy(2, HEIGHT / 3);
        printf("F학점과 부딪히면 게임이 종료됩니다");
        gotoxy(2, HEIGHT / 2);
        printf("플레이하실 모드를 입력 해주세요. \n ( 0 = NORMAL MODE  |  1 = HARD MODE): ");
        Sleep(100);
        scanf_s("%d", &mode);
        if (mode>=0) break;
    }
}

bool ResultMenu() {

    while (1) {

        system("cls");

        gotoxy(2, HEIGHT / 5);
        printf("GAME OVER");
        gotoxy(2, HEIGHT / 4);
        printf("당신의 점수는 : %d ", score);
        gotoxy(2, HEIGHT / 3);
        printf("재수강 하시겠습니까? Y / N");

        if (GetAsyncKeyState('Y') & 0x8000) {
            regame = false;   //true이면 게임종료
            score = 0; //새게임 점수 초기화
            health = 100; //체력 초기화
            break;
        }

        if (GetAsyncKeyState('N') & 0x8000) {
            regame = true;   //true이면 게임종료
            break;
        }
        Sleep(100);
    }
    return regame;
}
