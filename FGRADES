#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#incldue <windows.h>
#define WIDTH 13
#define HEIGTH 25
#define F_amount 30														//화면내의 F장애물의 갯수를 30개로 설정

void Zero(void) { //화면을 지우고, 커서의 위치를 0,0으로 이동시키는 함수
    system("cls");
}

void Gotoxy(int _x, int _y) { //커서의 위치를 변경하는 함수
    COORD pos = { _x, _y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void Size(int _col, int _lines) //콘솔창의 크기를 지정하는 함수
{
    char setText[100];
    sprintf_s(setText, "mode con cols=%d lines=%d", _col, _lines);
    system(setText);
}

void Player() { //게임 공간과 플레이어 생성 함수
    int x = 15, y = 30;
    Size(35, 35);

    while (1)
    {
        Zero();

        if (GetAsyncKeyState(VK_UP) & 0x8000)
        {
            y--;
            if (y < 0) y = 0;
        }
        if (GetAsyncKeyState(VK_DOWN) & 0x8000)
        {
            y++;
            if (y > 30) y = 30;
        }
        if (GetAsyncKeyState(VK_LEFT) & 0x8000)
        {
            x--;
            if (x < 0) x = 0;
        }
        if (GetAsyncKeyState(VK_RIGHT) & 0x8000)
        {
            x++;
            if (x > 30) x = 30;
        }

        Gotoxy(x, y);
        printf("♀");
        Sleep(35);
    }
}

void Startmenu(int s) { //게임시작 화면 함수
    int s;
    while (1) {

        Zero();
        Gotoxy(10, 9);
        printf("F학점 피하기 게임");
        Gotoxy(10, 12);
        printf("게임을 시작하려면 s키+enter키를 입력하시오.");
        scanf("%d", &s);
        if (s == 's')
            break;
    }
}

typedef struct {
	int x;
	int y;
	int check;
}FGrades;
FGrades fgrade[F_amount];											//장애물 구조체와 오브젝트 생성

void CreateFGrades() {
	int i;
	srand((unsigned int)time(NULL));									//time()과 srand()함수 이용해 rand()함수 초기화

	for (i = 0; i < F_amount;  i++) {
		if (!fgrade[i].check) {
			fgrade[i].x = rand() % WIDTH;									//WIDTH가 13이므로 0~12중 무작위값이 fgradex에 저장
			fgrade[i].y = HEIGTH - 1;
			fgrade[i].check = 1;															//fgrade 오브젝트의 존재여부를 존재하면 1, 존재하지 않으면 0 으로 나타냄
			return;
		}
	}
}

void FallFGrades() {
	int i;
	for (i = 0; i < F_amount; i++) {
		if (fgrade[i].check) {											//fgrade가 존재한다면 해당 fgrade의y값을 계속해서 감소시켜준다.
			fgrade[i].y--;
		}
	}
}

int DeleteFGrades() {
	int i;
	for (i = 0; i < F_amount; i++) {
		if (fgrade[i].check&&fgrade[i].y<=0)							//fgrade가 존재하고, fgrade가 바닥에 닿았을 때 존재여부를 0으로 설정함
			fgrade[i].check = 0;
	}
	return 0;
}
